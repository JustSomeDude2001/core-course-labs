# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: app_python

on:
  push:
    branches: [ lab3 ]
  pull_request:
    branches: [ main ]

jobs:

  # Setting up the environment, installing all requirements.

  setup:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
        cache: "pip"
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    

  # Linting. Checking for common issues.

  linting:
    runs-on: ubuntu-latest

    needs: setup

    defaults:
      run:
        working-directory: ./app_python

    steps:
    - name: Linter
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  # Testing using pytest.

  test:
    runs-on: ubuntu-latest

    needs: linting

    defaults:
      run:
        working-directory: ./app_python
    
    steps:
    - name: Tests
      run: python -m pytest

  # Pushing to docker once all is done.

  push_docker:
    runs-on: ubuntu-latest

    needs: test

    defaults:
      run:
        working-directory: ./app_python

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: app_python
          push: true
          tags:  ${{ secrets.DOCKER_USERNAME }}/app_python:latest